{"version":3,"file":"static/js/447.762ab70d.chunk.js","mappings":"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","sources":["webpack://movies/./src/components/MoviesList/moviesList.module.css?9068","webpack://movies/./src/components/MoviesItem/moviesItem.module.css?7f2d","components/MoviesItem/MoviesItem.jsx","components/MoviesList/MoviesList.jsx","webpack://movies/./src/components/SearchBar/searchBar.module.css?272a","components/SearchBar/SearchBar.jsx","pages/Movies/Movies.jsx","services/api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"list\":\"moviesList_list__HguQ5\"};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"moviesItem_item__jav7K\",\"info\":\"moviesItem_info__5mdZ5\",\"image\":\"moviesItem_image__L9VS0\",\"title\":\"moviesItem_title__-QR22\",\"vote\":\"moviesItem_vote__bEep3\"};","import { Link, useLocation } from \"react-router-dom\";\r\nimport s from \"./moviesItem.module.css\";\r\nimport noPoster from \"../../images/no_poster.png\";\r\n\r\nexport const MoviesItem = ({ id, title, poster, vote }) => {\r\n  const rating = vote.toFixed(1);\r\n  const location = useLocation();\r\n\r\n  return (\r\n    <li className={s.item}>\r\n      <Link to={`/movies/${id}`} state={{ from: location }}>\r\n        <img\r\n          className={s.image}\r\n          src={poster ? `https://image.tmdb.org/t/p/w500/${poster}` : noPoster}\r\n          alt={title}\r\n        />\r\n        <div className={s.info}>\r\n          <h2 className={s.title}>{title}</h2>\r\n          <span className={s.vote}>{rating}</span>\r\n        </div>\r\n      </Link>\r\n    </li>\r\n  );\r\n};\r\n","import { PropTypes } from \"prop-types\";\r\nimport s from \"./moviesList.module.css\";\r\n\r\nimport { MoviesItem } from \"../MoviesItem/MoviesItem\";\r\n\r\nconst MoviesList = ({ movies }) => {\r\n  return (\r\n    <>\r\n      <ul className={s.list}>\r\n        {movies.map(({ id, title, poster_path, vote_average }) => {\r\n          return (\r\n            <MoviesItem\r\n              key={id}\r\n              id={id}\r\n              title={title}\r\n              poster={poster_path}\r\n              vote={vote_average}\r\n            />\r\n          );\r\n        })}\r\n      </ul>\r\n    </>\r\n  );\r\n};\r\n\r\nexport { MoviesList };\r\n\r\nMoviesList.propTypes = {\r\n  movies: PropTypes.array.isRequired,\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"searchBar_form__3ORXQ\",\"btn\":\"searchBar_btn__4Q4Oe\",\"input\":\"searchBar_input__ltARr\"};","import s from \"./searchBar.module.css\";\r\n\r\nconst SearchBar = ({ value, onChange, onSubmit }) => {\r\n  return (\r\n    <form className={s.form} onSubmit={onSubmit}>\r\n      <input\r\n        className={s.input}\r\n        type=\"text\"\r\n        autoComplete=\"off\"\r\n        autoFocus\r\n        placeholder=\"Enter a movie title\"\r\n        value={value}\r\n        onChange={onChange}\r\n      />\r\n      <button className={s.btn} type=\"submit\" aria-label=\"Search\">\r\n        Go\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default SearchBar;\r\n","import { useEffect, useState } from \"react\";\r\nimport { useSearchParams } from \"react-router-dom\";\r\nimport { moviesSearchFetch } from \"../../services/api\";\r\nimport { MoviesList } from \"../../components/MoviesList/MoviesList\";\r\nimport SearchBar from \"../../components/SearchBar/SearchBar\";\r\n\r\nconst Movies = () => {\r\n  const [movies, setMovies] = useState([]);\r\n  const [query, setQuery] = useState(\"\");\r\n  const [searchParams, setSearchParams] = useSearchParams();\r\n\r\n  const handleChange = (e) => {\r\n    setQuery(e.currentTarget.value);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (query.trim() === \"\") {\r\n      return;\r\n    }\r\n\r\n    setSearchParams(query !== \"\" ? { query } : {});\r\n    setQuery(\"\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    const query = searchParams.get(\"query\") ?? \"\";\r\n\r\n    if (!query) {\r\n      return;\r\n    }\r\n\r\n    (async () => {\r\n      try {\r\n        const data = await moviesSearchFetch(query);\r\n\r\n        if (data.length === 0) {\r\n          return;\r\n        }\r\n\r\n        setMovies(data);\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    })();\r\n  }, [searchParams, movies.length]);\r\n\r\n  return (\r\n    <>\r\n      <SearchBar\r\n        value={query}\r\n        onChange={handleChange}\r\n        onSubmit={handleSubmit}\r\n      />\r\n      <MoviesList movies={movies} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Movies;\r\n","import axios from \"axios\";\r\nconst API_KEY = \"65125fece056379d46954e3213fdb44a\";\r\nconst BASE_URL = \"https://api.themoviedb.org/3/\";\r\n\r\nconst moviesTrendingFetch = async () => {\r\n  try {\r\n    const response = await axios.get(\r\n      `${BASE_URL}trending/movie/day?api_key=${API_KEY}`\r\n    );\r\n    return response.data.results;\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n};\r\n\r\nconst moviesSearchFetch = async (query) => {\r\n  try {\r\n    const response = await axios.get(\r\n      `${BASE_URL}search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`\r\n    );\r\n    return response.data.results;\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n};\r\n\r\nconst moviesDetailsFetch = async (id) => {\r\n  try {\r\n    const response = await axios.get(\r\n      `${BASE_URL}/movie/${id}?api_key=${API_KEY}&language=en-US`\r\n    );\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n};\r\n\r\nconst movieCastFetch = async (id) => {\r\n  try {\r\n    const response = await axios.get(\r\n      `${BASE_URL}/movie/${id}/credits?api_key=${API_KEY}&language=en-US`\r\n    );\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n};\r\n\r\nconst movieReviewsFetch = async (id) => {\r\n  try {\r\n    const response = await axios.get(\r\n      `${BASE_URL}/movie/${id}/reviews?api_key=${API_KEY}&language=en-US`\r\n    );\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n};\r\n\r\nexport {\r\n  moviesTrendingFetch,\r\n  moviesSearchFetch,\r\n  moviesDetailsFetch,\r\n  movieCastFetch,\r\n  movieReviewsFetch,\r\n};\r\n"],"names":["MoviesItem","_ref","id","title","poster","rating","vote","toFixed","location","useLocation","_jsx","className","s","children","_jsxs","Link","to","concat","state","from","src","noPoster","alt","MoviesList","movies","_Fragment","map","_ref2","poster_path","vote_average","value","onChange","onSubmit","type","autoComplete","autoFocus","placeholder","_useState","useState","_useState2","_slicedToArray","setMovies","_useState3","_useState4","query","setQuery","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","useEffect","_searchParams$get","get","_asyncToGenerator","_regeneratorRuntime","mark","_callee","data","wrap","_context","prev","next","moviesSearchFetch","sent","length","abrupt","t0","console","log","stop","SearchBar","e","currentTarget","preventDefault","trim","API_KEY","BASE_URL","moviesTrendingFetch","response","axios","results","error","apply","arguments","_callee2","_context2","_x","moviesDetailsFetch","_ref3","_callee3","_context3","_x2","movieCastFetch","_ref4","_callee4","_context4","_x3","movieReviewsFetch","_ref5","_callee5","_context5","_x4"],"sourceRoot":""}