{"version":3,"file":"static/js/544.22e327ac.chunk.js","mappings":"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","sources":["webpack://movies/./src/components/MoviesList/moviesList.module.css?9068","webpack://movies/./src/components/MoviesItem/moviesItem.module.css?7f2d","components/MoviesItem/MoviesItem.jsx","components/MoviesList/MoviesList.jsx","pages/Home/Home.jsx","services/api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"list\":\"moviesList_list__HguQ5\"};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"moviesItem_item__jav7K\",\"info\":\"moviesItem_info__5mdZ5\",\"image\":\"moviesItem_image__L9VS0\",\"title\":\"moviesItem_title__-QR22\",\"vote\":\"moviesItem_vote__bEep3\"};","import { Link, useLocation } from \"react-router-dom\";\r\nimport s from \"./moviesItem.module.css\";\r\nimport noPoster from \"../../images/no_poster.png\";\r\n\r\nexport const MoviesItem = ({ id, title, poster, vote }) => {\r\n  const rating = vote.toFixed(1);\r\n  const location = useLocation();\r\n\r\n  return (\r\n    <li className={s.item}>\r\n      <Link to={`/movies/${id}`} state={{ from: location }}>\r\n        <img\r\n          className={s.image}\r\n          src={poster ? `https://image.tmdb.org/t/p/w500/${poster}` : noPoster}\r\n          alt={title}\r\n        />\r\n        <div className={s.info}>\r\n          <h2 className={s.title}>{title}</h2>\r\n          <span className={s.vote}>{rating}</span>\r\n        </div>\r\n      </Link>\r\n    </li>\r\n  );\r\n};\r\n","import { PropTypes } from \"prop-types\";\r\nimport s from \"./moviesList.module.css\";\r\n\r\nimport { MoviesItem } from \"../MoviesItem/MoviesItem\";\r\n\r\nconst MoviesList = ({ movies }) => {\r\n  return (\r\n    <>\r\n      <ul className={s.list}>\r\n        {movies.map(({ id, title, poster_path, vote_average }) => {\r\n          return (\r\n            <MoviesItem\r\n              key={id}\r\n              id={id}\r\n              title={title}\r\n              poster={poster_path}\r\n              vote={vote_average}\r\n            />\r\n          );\r\n        })}\r\n      </ul>\r\n    </>\r\n  );\r\n};\r\n\r\nexport { MoviesList };\r\n\r\nMoviesList.propTypes = {\r\n  movies: PropTypes.array.isRequired,\r\n};\r\n","import { useEffect, useState } from \"react\";\r\nimport { moviesTrendingFetch } from \"../../services/api\";\r\nimport { MoviesList } from \"../../components/MoviesList/MoviesList\";\r\n\r\nconst Home = () => {\r\n  const [movies, setMovies] = useState([]);\r\n\r\n  useEffect(() => {\r\n    moviesTrendingFetch().then((data) => setMovies(data));\r\n  }, []);\r\n\r\n  return <>{movies && <MoviesList movies={movies} />}</>;\r\n};\r\n\r\nexport default Home;\r\n","import axios from \"axios\";\r\nconst API_KEY = \"65125fece056379d46954e3213fdb44a\";\r\nconst BASE_URL = \"https://api.themoviedb.org/3/\";\r\n\r\nconst moviesTrendingFetch = async () => {\r\n  try {\r\n    const response = await axios.get(\r\n      `${BASE_URL}trending/movie/day?api_key=${API_KEY}`\r\n    );\r\n    return response.data.results;\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n};\r\n\r\nconst moviesSearchFetch = async (query) => {\r\n  try {\r\n    const response = await axios.get(\r\n      `${BASE_URL}search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`\r\n    );\r\n    return response.data.results;\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n};\r\n\r\nconst moviesDetailsFetch = async (id) => {\r\n  try {\r\n    const response = await axios.get(\r\n      `${BASE_URL}/movie/${id}?api_key=${API_KEY}&language=en-US&append_to_response=videos`\r\n    );\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n};\r\n\r\nconst movieCastFetch = async (id) => {\r\n  try {\r\n    const response = await axios.get(\r\n      `${BASE_URL}/movie/${id}/credits?api_key=${API_KEY}&language=en-US`\r\n    );\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n};\r\n\r\nconst movieReviewsFetch = async (id) => {\r\n  try {\r\n    const response = await axios.get(\r\n      `${BASE_URL}/movie/${id}/reviews?api_key=${API_KEY}&language=en-US`\r\n    );\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n};\r\n\r\nexport {\r\n  moviesTrendingFetch,\r\n  moviesSearchFetch,\r\n  moviesDetailsFetch,\r\n  movieCastFetch,\r\n  movieReviewsFetch,\r\n};\r\n"],"names":["MoviesItem","_ref","id","title","poster","rating","vote","toFixed","location","useLocation","_jsx","className","s","children","_jsxs","Link","to","concat","state","from","src","noPoster","alt","MoviesList","movies","_Fragment","map","_ref2","poster_path","vote_average","_useState","useState","_useState2","_slicedToArray","setMovies","useEffect","moviesTrendingFetch","then","data","API_KEY","BASE_URL","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","wrap","_context","prev","next","axios","sent","abrupt","results","t0","console","error","stop","apply","arguments","moviesSearchFetch","_callee2","query","_context2","_x","moviesDetailsFetch","_ref3","_callee3","_context3","_x2","movieCastFetch","_ref4","_callee4","_context4","_x3","movieReviewsFetch","_ref5","_callee5","_context5","_x4"],"sourceRoot":""}