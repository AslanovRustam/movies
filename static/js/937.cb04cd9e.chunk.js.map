{"version":3,"file":"static/js/937.cb04cd9e.chunk.js","mappings":"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","sources":["webpack://movies/./src/components/Cast/cast.module.css?8374","components/Cast/Cast.jsx","services/api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"list\":\"cast_list__Ypddz\",\"img\":\"cast_img__uKW+i\",\"wrapper\":\"cast_wrapper__ecru0\"};","import { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { movieCastFetch } from '../../services/api';\r\nimport noPhoto from '../../images/no_profile_picture.jpg';\r\nimport s from './cast.module.css';\r\n\r\nconst Cast = () => {\r\n  const [cast, setCast] = useState('');\r\n  const { movieId } = useParams();\r\n\r\n  useEffect(() => {\r\n    movieCastFetch(movieId).then(data => setCast(data.cast));\r\n  }, [movieId]);\r\n\r\n  if (cast !== '') {\r\n    return (\r\n      <>\r\n        <ul className={s.list}>\r\n          {cast.map(actor => (\r\n            <li key={actor.id}>\r\n              <div className={s.wrapper}>\r\n                {actor.profile_path ? (\r\n                  <img\r\n                    src={`https://image.tmdb.org/t/p/w500${actor.profile_path}`}\r\n                    alt={actor.name}\r\n                  />\r\n                ) : (\r\n                  <img src={noPhoto} alt={actor.name} />\r\n                )}\r\n                <h3>{actor.name}</h3>\r\n                {actor.character ? (\r\n                  <h4>\"{actor.character}\"</h4>\r\n                ) : (\r\n                  <h4>{null}</h4>\r\n                )}\r\n              </div>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </>\r\n    );\r\n  }\r\n};\r\n\r\nexport default Cast;\r\n","import axios from \"axios\";\r\nconst API_KEY = \"65125fece056379d46954e3213fdb44a\";\r\nconst BASE_URL = \"https://api.themoviedb.org/3/\";\r\n\r\nconst moviesTrendingFetch = async () => {\r\n  try {\r\n    const response = await axios.get(\r\n      `${BASE_URL}trending/movie/day?api_key=${API_KEY}`\r\n    );\r\n    return response.data.results;\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n};\r\n\r\nconst moviesSearchFetch = async (query) => {\r\n  try {\r\n    const response = await axios.get(\r\n      `${BASE_URL}search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`\r\n    );\r\n    return response.data.results;\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n};\r\n\r\nconst moviesDetailsFetch = async (id) => {\r\n  try {\r\n    const response = await axios.get(\r\n      `${BASE_URL}/movie/${id}?api_key=${API_KEY}&language=en-US&append_to_response=videos`\r\n    );\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n};\r\n\r\nconst movieCastFetch = async (id) => {\r\n  try {\r\n    const response = await axios.get(\r\n      `${BASE_URL}/movie/${id}/credits?api_key=${API_KEY}&language=en-US`\r\n    );\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n};\r\n\r\nconst movieReviewsFetch = async (id) => {\r\n  try {\r\n    const response = await axios.get(\r\n      `${BASE_URL}/movie/${id}/reviews?api_key=${API_KEY}&language=en-US`\r\n    );\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n};\r\n\r\nexport {\r\n  moviesTrendingFetch,\r\n  moviesSearchFetch,\r\n  moviesDetailsFetch,\r\n  movieCastFetch,\r\n  movieReviewsFetch,\r\n};\r\n"],"names":["_useState","useState","_useState2","_slicedToArray","cast","setCast","movieId","useParams","useEffect","movieCastFetch","then","data","_jsx","_Fragment","children","className","s","map","actor","_jsxs","profile_path","src","concat","alt","name","character","id","API_KEY","BASE_URL","moviesTrendingFetch","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","wrap","_context","prev","next","axios","sent","abrupt","results","t0","console","error","stop","apply","arguments","moviesSearchFetch","_ref2","_callee2","query","_context2","_x","moviesDetailsFetch","_ref3","_callee3","_context3","_x2","_ref4","_callee4","_context4","_x3","movieReviewsFetch","_ref5","_callee5","_context5","_x4"],"sourceRoot":""}